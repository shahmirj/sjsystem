" @author - Shahmir Javaid
" @package - vim
"
" for best results add to `/etc/vimrc/vimrc.local`

" GENERAL SETS
"
set expandtab
set shiftwidth=4        " Number of space used for >>, >
set softtabstop=4       " Number of spaces that <TAB> uses
set smartindent         " Indent the next line like C
set noro                " user has to type ! for write to occur
set showbreak=֏\    " The breakline preceding character
set fillchars=vert:\|    " The verticle split character
set listchars=tab:▸\ ,eol:¶,extends:❯,precedes:❮,trail:.
set number              " Enable numbering
set title               " Set the title of the window to the vim filename
set dictionary=/usr/share/dict/words
set spellfile=~/.vim/custom-dictionary.utf-8.add
set notimeout
set spell
set ttimeout
set ttimeoutlen=10

" PREFACE
"
au VimResized * :wincmd =
let mapleader = ","

" BACKUP
"
" Only valid on the new 703 version
if version >= 703
    set backup                        " enable backups
    set noswapfile                    " it's 2013, Vim.
    set undodir=~/.vim/tmp/undo//     " undo files
    set backupdir=~/.vim/tmp/backup// " backups
    set directory=~/.vim/tmp/swap//   " swap files
    " Make those folders automatically if they don't already exist.
    if !isdirectory(expand(&undodir))
        call mkdir(expand(&undodir), "p")
    endif
    if !isdirectory(expand(&backupdir))
        call mkdir(expand(&backupdir), "p")
    endif
    if !isdirectory(expand(&directory))
        call mkdir(expand(&directory), "p")
    endif
endif

" COLORING
"
syntax enable
autocmd FileType make set noexpandtab
" set the filetype for certain unknowns
autocmd BufRead,BufNewFile *.tpp set filetype=cpp
" set the filetype for certain unknowns
autocmd BufRead,BufNewFile *.sass set filetype=css

" MAPPINGS
"
" quit vim
nnoremap K :q<cr>
" Man page of the current hit
nnoremap M K

" LEADER MAPPINGS
"
" Hidden Characters
nnoremap <leader>i :set list!<cr>
nnoremap <leader>m :!make -s<cr>
nnoremap <leader>c :!make -s clean<cr>
nnoremap <leader><CR> :!make -s clean; make -s<cr>

" DIFF
"
" diffthis, diffoff
function! DiffToggle()
    if &diff
        diffoff
    else
        diffthis
    endif
:endfunction
noremap <silent> <leader>d :call DiffToggle()<CR>

" NAVIGATION
"
" Move through lines
noremap <Up> gk
noremap <Down> gj
" Move tabs
noremap <leader><Left> :tabprevious<CR>
noremap <leader><Right> :tabnext<CR>
noremap <leader><Down> :tabmove -1<CR>
noremap <leader><Up> :tabmove +1<CR>
" Directory View
noremap <leader>e :E<CR>
" Move windows
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l
" Create a vertical window
noremap <leader>v <C-w>v
" Resize Horizontal and Vertical
noremap = :resize +1<CR>
noremap - :resize -1<CR>
noremap + :vertical-resize +1<CR>
noremap _ :vertical-resize -1<CR>

" HIGHLIGHTING
"
" highlight any characters that go beyond the 80 char limit
autocmd BufRead,BufNewFile *.py,*.c,*.h,*.cpp,*.php,*.java,makefile,makefile.*,*.tpp match ErrorMsg '\%>80v.\+'
" Change spelling hightlight as it is fucking annoying
hi clear SpellBad
hi SpellBad cterm=underline,bold ctermfg=1
hi clear Todo
hi Todo ctermfg=3 cterm=bold
hi clear Search
hi Search ctermfg=7 cterm=bold

noremap <F2> :set spell! spell?<CR>
noremap <F3> :set hlsearch! hlsearch?<CR> 
nnoremap <F9> :set paste! paste?<CR>
